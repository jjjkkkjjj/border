name: CI

on:
  push:
  pull_request:

env:
  CARGO_TERM_COLOR: always

jobs:
  test:
      name: Test
      runs-on: ${{ matrix.os }}
      strategy:
        matrix:
          os: [ubuntu-latest, windows-latest, macOS-latest]
          rust: [stable, nightly]
          python-version: [3.7]
      steps:
        - uses: actions/checkout@v2

        - name: Set up Python ${{ matrix.python-version }}
          uses: actions/setup-python@v2
          with:
            python-version: ${{ matrix.python-version }}
            architecture: ${{ matrix.platform.python-architecture }}

        - name: Install Rust toolchain
          uses: actions-rs/toolchain@v1
          with:
            toolchain: ${{ matrix.rust }}
            target: ${{ matrix.platform.rust-target }}
            profile: minimal
            default: true

        - if: matrix.platform.os == 'ubuntu-latest'
          name: Prepare LD_LIBRARY_PATH (Ubuntu only)
          run: echo LD_LIBRARY_PATH=${pythonLocation}/lib >> $GITHUB_ENV

        - name: Install gym
          run: |
            pip install Box2D
            pip install box2d-py
            pip install gym[atari]
            pip install gym[Box_2D]

        - name: Install pybullet-gym
          run:  |
            git clone https://github.com/benelot/pybullet-gym.git
            cd pybullet-gym
            pip install -e .

        - name: Set PYTHONPATH
          run: echo "PYTHONPATH=$PWD/border-py-gym-env/examples" >> $GITHUB_ENV

        - if: matrix.os == 'windows-latest'
          name: Set PYTHONPATH (Windows)
          run: echo "PYTHONPATH=%cd%\border-py-gym-env\examples" | Out-File -FilePath $Env:GITHUB_ENV -Encoding utf-8 -Append

        - name: Test border-core
          run: cargo test -p border-core

        - name: Test border-py-gym-env
          run: cargo test -p border-py-gym-env
